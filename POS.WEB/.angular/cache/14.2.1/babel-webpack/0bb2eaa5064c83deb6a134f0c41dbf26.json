{"ast":null,"code":"import { ɵɵdefineInjectable, Injectable, Directive, Input, HostBinding, NgModule } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\n\nclass IconService {\n  constructor() {\n    this.iconsByName = {};\n  }\n\n  register(name, icon) {\n    this.iconsByName[name] = icon;\n  }\n\n  registerAll(iconsByName) {\n    Object.assign(this.iconsByName, iconsByName);\n  }\n\n  get(name) {\n    const icon = this.iconsByName[name];\n\n    if (!icon) {\n      throw new Error(`[Iconify]: No icon registered for name '${name}'. Use 'IconService' to register icons.`);\n    }\n\n    return icon;\n  }\n\n}\n\nIconService.ɵfac = function IconService_Factory(t) {\n  return new (t || IconService)();\n};\n\nIconService.ɵprov = ɵɵdefineInjectable({\n  factory: function IconService_Factory() {\n    return new IconService();\n  },\n  token: IconService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/* tslint:disable:no-redundant-jsdoc variable-name no-conditional-assignment no-bitwise */\n\n/**\r\n * Unique id counter\r\n */\n\n\nlet idCounter = 0;\n/**\r\n * Regex used to split dimensions\r\n */\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\n/**\r\n * Attributes used for icon\r\n */\n\nconst iconAttributes = ['width', 'height', 'inline', 'hFlip', 'vFlip', 'flip', 'rotate', 'align', 'color', 'box'];\n/**\r\n * Default attribute values\r\n */\n\nconst defaultAttributes = {\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  hFlip: false,\n  vFlip: false\n};\n/**\r\n * Add missing properties to icon\r\n *\r\n * Important: in PHP version of this library this function is part of Collection class: Collection::addMissingAttributes()\r\n *\r\n * JavaScript version uses separate file so this function could be used in React and other components without loading\r\n * entire Collection class.\r\n */\n\nfunction normalize(data) {\n  const item = Object.assign(Object.create(null), defaultAttributes, data);\n\n  if (item.inlineTop === void 0) {\n    item.inlineTop = item.top;\n  }\n\n  if (item.inlineHeight === void 0) {\n    item.inlineHeight = item.height;\n  }\n\n  if (item.verticalAlign === void 0) {\n    // -0.143 if icon is designed for 14px height,\n    // otherwise assume icon is designed for 16px height\n    item.verticalAlign = item.height % 7 === 0 && item.height % 8 !== 0 ? -0.143 : -0.125;\n  }\n\n  return item;\n}\n/**\r\n * Get preserveAspectRatio attribute value\r\n */\n\n\nfunction getAlignment(align) {\n  let result;\n\n  switch (align.horizontal) {\n    case 'left':\n      result = 'xMin';\n      break;\n\n    case 'right':\n      result = 'xMax';\n      break;\n\n    default:\n      result = 'xMid';\n  }\n\n  switch (align.vertical) {\n    case 'top':\n      result += 'YMin';\n      break;\n\n    case 'bottom':\n      result += 'YMax';\n      break;\n\n    default:\n      result += 'YMid';\n  }\n\n  result += align.slice ? ' slice' : ' meet';\n  return result;\n}\n/**\r\n * SVG class\r\n *\r\n * @see @iconify/json-tools/src/svg.js\r\n */\n\n\nclass SVG {\n  /**\r\n   * Constructor\r\n   *\r\n   *  Use Collection.getIconData() to retrieve icon data\r\n   */\n  constructor(_icon) {\n    this._icon = _icon;\n  }\n  /**\r\n   * Calculate second dimension when only 1 dimension is set\r\n   * If size == width, ratio = height/width\r\n   * If size == height, ratio = width/height\r\n   */\n\n\n  static calculateDimension(size, ratio, precision = 100) {\n    if (ratio === 1) {\n      return size;\n    }\n\n    if (typeof size === 'number') {\n      return Math.ceil(size * ratio * precision) / precision;\n    } // split code into sets of strings and numbers\n\n\n    const split = size.split(unitsSplit);\n\n    if (split === null || !split.length) {\n      return null;\n    }\n\n    const results = [];\n    let code = split.shift();\n    let isNumber = unitsTest.test(code);\n    let num;\n\n    while (true) {\n      if (isNumber) {\n        num = parseFloat(code);\n\n        if (isNaN(num)) {\n          results.push(code);\n        } else {\n          results.push(Math.ceil(num * ratio * precision) / precision);\n        }\n      } else {\n        results.push(code);\n      } // next\n\n\n      code = split.shift();\n\n      if (code === void 0) {\n        return results.join('');\n      }\n\n      isNumber = !isNumber;\n    }\n  }\n  /**\r\n   * Replace IDs in SVG output with unique IDs\r\n   * Fast replacement without parsing XML, assuming commonly used patterns.\r\n   */\n\n\n  static replaceIDs(body) {\n    const regex = /\\sid=\"(\\S+)\"/g;\n    const ids = [];\n    let match;\n    let prefix;\n\n    function strReplace(search, replace, subject) {\n      let pos = 0;\n\n      while ((pos = subject.indexOf(search, pos)) !== -1) {\n        subject = subject.slice(0, pos) + replace + subject.slice(pos + search.length);\n        pos += replace.length;\n      }\n\n      return subject;\n    } // Find all IDs\n\n\n    while (match = regex.exec(body)) {\n      ids.push(match[1]);\n    }\n\n    if (!ids.length) {\n      return body;\n    }\n\n    prefix = 'IconifyId-' + Date.now().toString(16) + '-' + (Math.random() * 0x1000000 | 0).toString(16) + '-'; // Replace with unique ids\n\n    ids.forEach(id => {\n      const newID = prefix + idCounter;\n      idCounter++;\n      body = strReplace('=\"' + id + '\"', '=\"' + newID + '\"', body);\n      body = strReplace('=\"#' + id + '\"', '=\"#' + newID + '\"', body);\n      body = strReplace('(#' + id + ')', '(#' + newID + ')', body);\n    });\n    return body;\n  }\n  /**\r\n   * Get SVG attributes\r\n   */\n\n\n  getAttributes(props) {\n    const item = this._icon;\n\n    if (typeof props !== 'object') {\n      props = Object.create(null);\n    } // Set data\n\n\n    const align = {\n      horizontal: 'center',\n      vertical: 'middle',\n      slice: false\n    };\n    const transform = {\n      rotate: item.rotate,\n      hFlip: item.hFlip,\n      vFlip: item.vFlip\n    };\n    const style = Object.create(null);\n    const attributes = Object.create(null); // Get width/height\n\n    const inline = props.inline === true || props.inline === 'true' || props.inline === '1';\n    const box = {\n      left: item.left,\n      top: inline ? item.inlineTop : item.top,\n      width: item.width,\n      height: inline ? item.inlineHeight : item.height\n    }; // Transformations\n\n    ['hFlip', 'vFlip'].forEach(key => {\n      if (props[key] !== void 0 && (props[key] === true || props[key] === 'true' || props[key] === '1')) {\n        transform[key] = !transform[key];\n      }\n    });\n\n    if (props.flip !== void 0) {\n      props.flip.toLowerCase().split(/[\\s,]+/).forEach(value => {\n        switch (value) {\n          case 'horizontal':\n            transform.hFlip = !transform.hFlip;\n            break;\n\n          case 'vertical':\n            transform.vFlip = !transform.vFlip;\n        }\n      });\n    }\n\n    if (props.rotate !== void 0) {\n      let value = props.rotate;\n\n      if (typeof value === 'number') {\n        transform.rotate += value;\n      } else if (typeof value === 'string') {\n        const units = value.replace(/^-?[0-9.]*/, '');\n\n        if (units === '') {\n          value = parseInt(value, 10);\n\n          if (!isNaN(value)) {\n            transform.rotate += value;\n          }\n        } else if (units !== value) {\n          let split = false;\n\n          switch (units) {\n            case '%':\n              // 25% -> 1, 50% -> 2, ...\n              split = 25;\n              break;\n\n            case 'deg':\n              // 90deg -> 1, 180deg -> 2, ...\n              split = 90;\n          }\n\n          if (split) {\n            value = parseInt(value.slice(0, value.length - units.length), 10);\n\n            if (!isNaN(value)) {\n              transform.rotate += Math.round(value / split);\n            }\n          }\n        }\n      }\n    } // Apply transformations to box\n\n\n    const transformations = [];\n    let tempValue;\n\n    if (transform.hFlip) {\n      if (transform.vFlip) {\n        transform.rotate += 2;\n      } else {\n        // Horizontal flip\n        transformations.push('translate(' + (box.width + box.left) + ' ' + (0 - box.top) + ')');\n        transformations.push('scale(-1 1)');\n        box.top = box.left = 0;\n      }\n    } else if (transform.vFlip) {\n      // Vertical flip\n      transformations.push('translate(' + (0 - box.left) + ' ' + (box.height + box.top) + ')');\n      transformations.push('scale(1 -1)');\n      box.top = box.left = 0;\n    }\n\n    switch (transform.rotate % 4) {\n      case 1:\n        // 90deg\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift('rotate(90 ' + tempValue + ' ' + tempValue + ')'); // swap width/height and x/y\n\n        if (box.left !== 0 || box.top !== 0) {\n          tempValue = box.left;\n          box.left = box.top;\n          box.top = tempValue;\n        }\n\n        if (box.width !== box.height) {\n          tempValue = box.width;\n          box.width = box.height;\n          box.height = tempValue;\n        }\n\n        break;\n\n      case 2:\n        // 180deg\n        transformations.unshift('rotate(180 ' + (box.width / 2 + box.left) + ' ' + (box.height / 2 + box.top) + ')');\n        break;\n\n      case 3:\n        // 270deg\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift('rotate(-90 ' + tempValue + ' ' + tempValue + ')'); // swap width/height and x/y\n\n        if (box.left !== 0 || box.top !== 0) {\n          tempValue = box.left;\n          box.left = box.top;\n          box.top = tempValue;\n        }\n\n        if (box.width !== box.height) {\n          tempValue = box.width;\n          box.width = box.height;\n          box.height = tempValue;\n        }\n\n        break;\n    } // Calculate dimensions\n    // Values for width/height: null = default, 'auto' = from svg, false = do not set\n    // Default: if both values aren't set, height defaults to '1em', width is calculated from height\n\n\n    const customWidth = props.width ? props.width : null;\n    let customHeight = props.height ? props.height : null;\n    let width;\n    let height;\n\n    if (customWidth === null && customHeight === null) {\n      customHeight = '1em';\n    }\n\n    if (customWidth !== null && customHeight !== null) {\n      width = customWidth;\n      height = customHeight;\n    } else if (customWidth !== null) {\n      width = customWidth;\n      height = SVG.calculateDimension(width, box.height / box.width);\n    } else {\n      height = customHeight;\n      width = SVG.calculateDimension(height, box.width / box.height);\n    }\n\n    if (width !== false) {\n      attributes.width = width === 'auto' ? box.width : width;\n    }\n\n    if (height !== false) {\n      attributes.height = height === 'auto' ? box.height : height;\n    } // Add vertical-align for inline icon\n\n\n    if (inline && item.verticalAlign !== 0) {\n      style['vertical-align'] = item.verticalAlign + 'em';\n    } // Check custom alignment\n\n\n    if (props.align !== void 0) {\n      props.align.toLowerCase().split(/[\\s,]+/).forEach(value => {\n        switch (value) {\n          case 'left':\n          case 'right':\n          case 'center':\n            align.horizontal = value;\n            break;\n\n          case 'top':\n          case 'bottom':\n          case 'middle':\n            align.vertical = value;\n            break;\n\n          case 'crop':\n            align.slice = true;\n            break;\n\n          case 'meet':\n            align.slice = false;\n        }\n      });\n    } // Generate viewBox and preserveAspectRatio attributes\n\n\n    attributes.preserveAspectRatio = getAlignment(align);\n    attributes.viewBox = box.left + ' ' + box.top + ' ' + box.width + ' ' + box.height; // Generate body\n\n    let body = SVG.replaceIDs(item.body);\n\n    if (props.color !== void 0) {\n      body = body.replace(/currentColor/g, props.color);\n    }\n\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(' ') + '\">' + body + '</g>';\n    }\n\n    if (props.box === true || props.box === 'true' || props.box === '1') {\n      // Add transparent bounding box\n      // tslint:disable-next-line:max-line-length\n      body += '<rect x=\"' + box.left + '\" y=\"' + box.top + '\" width=\"' + box.width + '\" height=\"' + box.height + '\" fill=\"rgba(0, 0, 0, 0)\" />';\n    }\n\n    return {\n      attributes,\n      body,\n      style\n    };\n  }\n  /**\r\n   * Generate SVG\r\n   */\n\n\n  getSVG(attributes) {\n    const data = this.getAttributes(attributes);\n    let svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"'; // Add SVG attributes\n\n    Object.keys(data.attributes).forEach(attr => {\n      svg += ' ' + attr + '=\"' + data.attributes[attr] + '\"';\n    }); // Add style with 360deg transformation to style to prevent subpixel rendering bug\n\n    svg += ' style=\"-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);';\n    Object.keys(data.style).forEach(attr => {\n      svg += ' ' + attr + ': ' + data.style[attr] + ';';\n    });\n    svg += '\">';\n    svg += data.body + '</svg>';\n    return svg;\n  }\n\n}\n\nclass IconDirective {\n  constructor(domSanitizer, iconService) {\n    this.domSanitizer = domSanitizer;\n    this.iconService = iconService;\n    this.width = '1em';\n    this.height = '1em';\n    this.rotate = 0;\n  }\n\n  ngOnInit() {}\n\n  ngOnChanges(changes) {\n    if (changes) {\n      this.updateIcon();\n    }\n  }\n\n  updateIcon() {\n    const icon = this.getIcon();\n    const svg = new SVG(normalize(icon));\n    this.iconHTML = this.generateSvgHtml(svg);\n  }\n\n  getIcon() {\n    const iconInput = this.icon || this.icIcon;\n\n    if (typeof iconInput !== 'object' && typeof iconInput !== 'string') {\n      throw new Error('[Iconify]: No icon provided');\n    }\n\n    return typeof iconInput === 'object' ? iconInput : this.iconService.get(iconInput);\n  }\n\n  generateSvgHtml(svg) {\n    return this.domSanitizer.bypassSecurityTrustHtml(svg.getSVG({\n      width: this.size || this.width,\n      height: this.size || this.height,\n      color: this.color,\n      inline: this.inline,\n      box: this.box,\n      align: this.align,\n      hFlip: this.hFlip,\n      vFlip: this.vFlip,\n      flip: this.flip,\n      rotate: this.rotate\n    }));\n  }\n\n}\n\nIconDirective.ɵfac = function IconDirective_Factory(t) {\n  return new (t || IconDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(IconService));\n};\n\nIconDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: IconDirective,\n  selectors: [[\"ic-icon\"], [\"\", \"icIcon\", \"\"]],\n  hostVars: 3,\n  hostBindings: function IconDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"innerHTML\", ctx.iconHTML, ɵngcc0.ɵɵsanitizeHtml);\n      ɵngcc0.ɵɵclassProp(\"ic-inline\", ctx.inline);\n    }\n  },\n  inputs: {\n    width: \"width\",\n    height: \"height\",\n    rotate: \"rotate\",\n    icIcon: \"icIcon\",\n    icon: \"icon\",\n    color: \"color\",\n    inline: \"inline\",\n    box: \"box\",\n    size: \"size\",\n    align: \"align\",\n    hFlip: \"hFlip\",\n    vFlip: \"vFlip\",\n    flip: \"flip\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nIconDirective.ctorParameters = () => [{\n  type: DomSanitizer\n}, {\n  type: IconService\n}];\n\nIconDirective.propDecorators = {\n  icIcon: [{\n    type: Input\n  }],\n  icon: [{\n    type: Input\n  }],\n  color: [{\n    type: Input\n  }],\n  inline: [{\n    type: Input\n  }, {\n    type: HostBinding,\n    args: ['class.ic-inline']\n  }],\n  box: [{\n    type: Input\n  }],\n  size: [{\n    type: Input\n  }],\n  width: [{\n    type: Input\n  }],\n  height: [{\n    type: Input\n  }],\n  align: [{\n    type: Input\n  }],\n  hFlip: [{\n    type: Input\n  }],\n  vFlip: [{\n    type: Input\n  }],\n  flip: [{\n    type: Input\n  }],\n  rotate: [{\n    type: Input\n  }],\n  iconHTML: [{\n    type: HostBinding,\n    args: ['innerHTML']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ic-icon,[icIcon]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.DomSanitizer\n    }, {\n      type: IconService\n    }];\n  }, {\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    rotate: [{\n      type: Input\n    }],\n    iconHTML: [{\n      type: HostBinding,\n      args: ['innerHTML']\n    }],\n    icIcon: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    inline: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['class.ic-inline']\n    }],\n    box: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    align: [{\n      type: Input\n    }],\n    hFlip: [{\n      type: Input\n    }],\n    vFlip: [{\n      type: Input\n    }],\n    flip: [{\n      type: Input\n    }]\n  });\n})();\n\nclass IconModule {}\n\nIconModule.ɵfac = function IconModule_Factory(t) {\n  return new (t || IconModule)();\n};\n\nIconModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: IconModule\n});\nIconModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [IconDirective],\n      imports: [],\n      exports: [IconDirective]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IconModule, {\n    declarations: [IconDirective],\n    exports: [IconDirective]\n  });\n})();\n/*\r\n * Public API Surface of iconify\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { IconDirective, IconModule, IconService };","map":{"version":3,"names":["ɵɵdefineInjectable","Injectable","Directive","Input","HostBinding","NgModule","DomSanitizer","ɵngcc0","ɵngcc1","IconService","constructor","iconsByName","register","name","icon","registerAll","Object","assign","get","Error","ɵfac","IconService_Factory","t","ɵprov","factory","token","providedIn","ngDevMode","ɵsetClassMetadata","type","args","idCounter","unitsSplit","unitsTest","iconAttributes","defaultAttributes","left","top","width","height","rotate","hFlip","vFlip","normalize","data","item","create","inlineTop","inlineHeight","verticalAlign","getAlignment","align","result","horizontal","vertical","slice","SVG","_icon","calculateDimension","size","ratio","precision","Math","ceil","split","length","results","code","shift","isNumber","test","num","parseFloat","isNaN","push","join","replaceIDs","body","regex","ids","match","prefix","strReplace","search","replace","subject","pos","indexOf","exec","Date","now","toString","random","forEach","id","newID","getAttributes","props","transform","style","attributes","inline","box","key","flip","toLowerCase","value","units","parseInt","round","transformations","tempValue","unshift","customWidth","customHeight","preserveAspectRatio","viewBox","color","getSVG","svg","keys","attr","IconDirective","domSanitizer","iconService","ngOnInit","ngOnChanges","changes","updateIcon","getIcon","iconHTML","generateSvgHtml","iconInput","icIcon","bypassSecurityTrustHtml","IconDirective_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","hostVars","hostBindings","IconDirective_HostBindings","rf","ctx","ɵɵhostProperty","ɵɵsanitizeHtml","ɵɵclassProp","inputs","features","ɵɵNgOnChangesFeature","ctorParameters","propDecorators","selector","IconModule","IconModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","imports","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["C:/Projects/Sistema POS 2022/SirPosFront14/node_modules/@visurel/iconify-angular/__ivy_ngcc__/fesm2015/visurel-iconify-angular.js"],"sourcesContent":["import { ɵɵdefineInjectable, Injectable, Directive, Input, HostBinding, NgModule } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nclass IconService {\r\n    constructor() {\r\n        this.iconsByName = {};\r\n    }\r\n    register(name, icon) {\r\n        this.iconsByName[name] = icon;\r\n    }\r\n    registerAll(iconsByName) {\r\n        Object.assign(this.iconsByName, iconsByName);\r\n    }\r\n    get(name) {\r\n        const icon = this.iconsByName[name];\r\n        if (!icon) {\r\n            throw new Error(`[Iconify]: No icon registered for name '${name}'. Use 'IconService' to register icons.`);\r\n        }\r\n        return icon;\r\n    }\r\n}\nIconService.ɵfac = function IconService_Factory(t) { return new (t || IconService)(); };\r\nIconService.ɵprov = ɵɵdefineInjectable({ factory: function IconService_Factory() { return new IconService(); }, token: IconService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n\n/* tslint:disable:no-redundant-jsdoc variable-name no-conditional-assignment no-bitwise */\r\n/**\r\n * Unique id counter\r\n */\r\nlet idCounter = 0;\r\n/**\r\n * Regex used to split dimensions\r\n */\r\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\r\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\r\n/**\r\n * Attributes used for icon\r\n */\r\nconst iconAttributes = ['width', 'height', 'inline', 'hFlip', 'vFlip', 'flip', 'rotate', 'align', 'color', 'box'];\r\n/**\r\n * Default attribute values\r\n */\r\nconst defaultAttributes = {\r\n    left: 0,\r\n    top: 0,\r\n    width: 16,\r\n    height: 16,\r\n    rotate: 0,\r\n    hFlip: false,\r\n    vFlip: false\r\n};\r\n/**\r\n * Add missing properties to icon\r\n *\r\n * Important: in PHP version of this library this function is part of Collection class: Collection::addMissingAttributes()\r\n *\r\n * JavaScript version uses separate file so this function could be used in React and other components without loading\r\n * entire Collection class.\r\n */\r\nfunction normalize(data) {\r\n    const item = Object.assign(Object.create(null), defaultAttributes, data);\r\n    if (item.inlineTop === void 0) {\r\n        item.inlineTop = item.top;\r\n    }\r\n    if (item.inlineHeight === void 0) {\r\n        item.inlineHeight = item.height;\r\n    }\r\n    if (item.verticalAlign === void 0) {\r\n        // -0.143 if icon is designed for 14px height,\r\n        // otherwise assume icon is designed for 16px height\r\n        item.verticalAlign = item.height % 7 === 0 && item.height % 8 !== 0 ? -0.143 : -0.125;\r\n    }\r\n    return item;\r\n}\r\n/**\r\n * Get preserveAspectRatio attribute value\r\n */\r\nfunction getAlignment(align) {\r\n    let result;\r\n    switch (align.horizontal) {\r\n        case 'left':\r\n            result = 'xMin';\r\n            break;\r\n        case 'right':\r\n            result = 'xMax';\r\n            break;\r\n        default:\r\n            result = 'xMid';\r\n    }\r\n    switch (align.vertical) {\r\n        case 'top':\r\n            result += 'YMin';\r\n            break;\r\n        case 'bottom':\r\n            result += 'YMax';\r\n            break;\r\n        default:\r\n            result += 'YMid';\r\n    }\r\n    result += align.slice ? ' slice' : ' meet';\r\n    return result;\r\n}\r\n/**\r\n * SVG class\r\n *\r\n * @see @iconify/json-tools/src/svg.js\r\n */\r\nclass SVG {\r\n    /**\r\n     * Constructor\r\n     *\r\n     *  Use Collection.getIconData() to retrieve icon data\r\n     */\r\n    constructor(_icon) {\r\n        this._icon = _icon;\r\n    }\r\n    /**\r\n     * Calculate second dimension when only 1 dimension is set\r\n     * If size == width, ratio = height/width\r\n     * If size == height, ratio = width/height\r\n     */\r\n    static calculateDimension(size, ratio, precision = 100) {\r\n        if (ratio === 1) {\r\n            return size;\r\n        }\r\n        if (typeof size === 'number') {\r\n            return Math.ceil(size * ratio * precision) / precision;\r\n        }\r\n        // split code into sets of strings and numbers\r\n        const split = size.split(unitsSplit);\r\n        if (split === null || !split.length) {\r\n            return null;\r\n        }\r\n        const results = [];\r\n        let code = split.shift();\r\n        let isNumber = unitsTest.test(code);\r\n        let num;\r\n        while (true) {\r\n            if (isNumber) {\r\n                num = parseFloat(code);\r\n                if (isNaN(num)) {\r\n                    results.push(code);\r\n                }\r\n                else {\r\n                    results.push(Math.ceil(num * ratio * precision) / precision);\r\n                }\r\n            }\r\n            else {\r\n                results.push(code);\r\n            }\r\n            // next\r\n            code = split.shift();\r\n            if (code === void 0) {\r\n                return results.join('');\r\n            }\r\n            isNumber = !isNumber;\r\n        }\r\n    }\r\n    /**\r\n     * Replace IDs in SVG output with unique IDs\r\n     * Fast replacement without parsing XML, assuming commonly used patterns.\r\n     */\r\n    static replaceIDs(body) {\r\n        const regex = /\\sid=\"(\\S+)\"/g;\r\n        const ids = [];\r\n        let match;\r\n        let prefix;\r\n        function strReplace(search, replace, subject) {\r\n            let pos = 0;\r\n            while ((pos = subject.indexOf(search, pos)) !== -1) {\r\n                subject = subject.slice(0, pos) + replace + subject.slice(pos + search.length);\r\n                pos += replace.length;\r\n            }\r\n            return subject;\r\n        }\r\n        // Find all IDs\r\n        while (match = regex.exec(body)) {\r\n            ids.push(match[1]);\r\n        }\r\n        if (!ids.length) {\r\n            return body;\r\n        }\r\n        prefix = 'IconifyId-' + Date.now().toString(16) + '-' + (Math.random() * 0x1000000 | 0).toString(16) + '-';\r\n        // Replace with unique ids\r\n        ids.forEach((id) => {\r\n            const newID = prefix + idCounter;\r\n            idCounter++;\r\n            body = strReplace('=\"' + id + '\"', '=\"' + newID + '\"', body);\r\n            body = strReplace('=\"#' + id + '\"', '=\"#' + newID + '\"', body);\r\n            body = strReplace('(#' + id + ')', '(#' + newID + ')', body);\r\n        });\r\n        return body;\r\n    }\r\n    /**\r\n     * Get SVG attributes\r\n     */\r\n    getAttributes(props) {\r\n        const item = this._icon;\r\n        if (typeof props !== 'object') {\r\n            props = Object.create(null);\r\n        }\r\n        // Set data\r\n        const align = {\r\n            horizontal: 'center',\r\n            vertical: 'middle',\r\n            slice: false\r\n        };\r\n        const transform = {\r\n            rotate: item.rotate,\r\n            hFlip: item.hFlip,\r\n            vFlip: item.vFlip\r\n        };\r\n        const style = Object.create(null);\r\n        const attributes = Object.create(null);\r\n        // Get width/height\r\n        const inline = props.inline === true || props.inline === 'true' || props.inline === '1';\r\n        const box = {\r\n            left: item.left,\r\n            top: inline ? item.inlineTop : item.top,\r\n            width: item.width,\r\n            height: inline ? item.inlineHeight : item.height\r\n        };\r\n        // Transformations\r\n        ['hFlip', 'vFlip'].forEach(key => {\r\n            if (props[key] !== void 0 && (props[key] === true || props[key] === 'true' || props[key] === '1')) {\r\n                transform[key] = !transform[key];\r\n            }\r\n        });\r\n        if (props.flip !== void 0) {\r\n            props.flip.toLowerCase().split(/[\\s,]+/).forEach(value => {\r\n                switch (value) {\r\n                    case 'horizontal':\r\n                        transform.hFlip = !transform.hFlip;\r\n                        break;\r\n                    case 'vertical':\r\n                        transform.vFlip = !transform.vFlip;\r\n                }\r\n            });\r\n        }\r\n        if (props.rotate !== void 0) {\r\n            let value = props.rotate;\r\n            if (typeof value === 'number') {\r\n                transform.rotate += value;\r\n            }\r\n            else if (typeof value === 'string') {\r\n                const units = value.replace(/^-?[0-9.]*/, '');\r\n                if (units === '') {\r\n                    value = parseInt(value, 10);\r\n                    if (!isNaN(value)) {\r\n                        transform.rotate += value;\r\n                    }\r\n                }\r\n                else if (units !== value) {\r\n                    let split = false;\r\n                    switch (units) {\r\n                        case '%':\r\n                            // 25% -> 1, 50% -> 2, ...\r\n                            split = 25;\r\n                            break;\r\n                        case 'deg':\r\n                            // 90deg -> 1, 180deg -> 2, ...\r\n                            split = 90;\r\n                    }\r\n                    if (split) {\r\n                        value = parseInt(value.slice(0, value.length - units.length), 10);\r\n                        if (!isNaN(value)) {\r\n                            transform.rotate += Math.round(value / split);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Apply transformations to box\r\n        const transformations = [];\r\n        let tempValue;\r\n        if (transform.hFlip) {\r\n            if (transform.vFlip) {\r\n                transform.rotate += 2;\r\n            }\r\n            else {\r\n                // Horizontal flip\r\n                transformations.push('translate(' + (box.width + box.left) + ' ' + (0 - box.top) + ')');\r\n                transformations.push('scale(-1 1)');\r\n                box.top = box.left = 0;\r\n            }\r\n        }\r\n        else if (transform.vFlip) {\r\n            // Vertical flip\r\n            transformations.push('translate(' + (0 - box.left) + ' ' + (box.height + box.top) + ')');\r\n            transformations.push('scale(1 -1)');\r\n            box.top = box.left = 0;\r\n        }\r\n        switch (transform.rotate % 4) {\r\n            case 1:\r\n                // 90deg\r\n                tempValue = box.height / 2 + box.top;\r\n                transformations.unshift('rotate(90 ' + tempValue + ' ' + tempValue + ')');\r\n                // swap width/height and x/y\r\n                if (box.left !== 0 || box.top !== 0) {\r\n                    tempValue = box.left;\r\n                    box.left = box.top;\r\n                    box.top = tempValue;\r\n                }\r\n                if (box.width !== box.height) {\r\n                    tempValue = box.width;\r\n                    box.width = box.height;\r\n                    box.height = tempValue;\r\n                }\r\n                break;\r\n            case 2:\r\n                // 180deg\r\n                transformations.unshift('rotate(180 ' + (box.width / 2 + box.left) + ' ' + (box.height / 2 + box.top) + ')');\r\n                break;\r\n            case 3:\r\n                // 270deg\r\n                tempValue = box.width / 2 + box.left;\r\n                transformations.unshift('rotate(-90 ' + tempValue + ' ' + tempValue + ')');\r\n                // swap width/height and x/y\r\n                if (box.left !== 0 || box.top !== 0) {\r\n                    tempValue = box.left;\r\n                    box.left = box.top;\r\n                    box.top = tempValue;\r\n                }\r\n                if (box.width !== box.height) {\r\n                    tempValue = box.width;\r\n                    box.width = box.height;\r\n                    box.height = tempValue;\r\n                }\r\n                break;\r\n        }\r\n        // Calculate dimensions\r\n        // Values for width/height: null = default, 'auto' = from svg, false = do not set\r\n        // Default: if both values aren't set, height defaults to '1em', width is calculated from height\r\n        const customWidth = props.width ? props.width : null;\r\n        let customHeight = props.height ? props.height : null;\r\n        let width;\r\n        let height;\r\n        if (customWidth === null && customHeight === null) {\r\n            customHeight = '1em';\r\n        }\r\n        if (customWidth !== null && customHeight !== null) {\r\n            width = customWidth;\r\n            height = customHeight;\r\n        }\r\n        else if (customWidth !== null) {\r\n            width = customWidth;\r\n            height = SVG.calculateDimension(width, box.height / box.width);\r\n        }\r\n        else {\r\n            height = customHeight;\r\n            width = SVG.calculateDimension(height, box.width / box.height);\r\n        }\r\n        if (width !== false) {\r\n            attributes.width = width === 'auto' ? box.width : width;\r\n        }\r\n        if (height !== false) {\r\n            attributes.height = height === 'auto' ? box.height : height;\r\n        }\r\n        // Add vertical-align for inline icon\r\n        if (inline && item.verticalAlign !== 0) {\r\n            style['vertical-align'] = item.verticalAlign + 'em';\r\n        }\r\n        // Check custom alignment\r\n        if (props.align !== void 0) {\r\n            props.align.toLowerCase().split(/[\\s,]+/).forEach(value => {\r\n                switch (value) {\r\n                    case 'left':\r\n                    case 'right':\r\n                    case 'center':\r\n                        align.horizontal = value;\r\n                        break;\r\n                    case 'top':\r\n                    case 'bottom':\r\n                    case 'middle':\r\n                        align.vertical = value;\r\n                        break;\r\n                    case 'crop':\r\n                        align.slice = true;\r\n                        break;\r\n                    case 'meet':\r\n                        align.slice = false;\r\n                }\r\n            });\r\n        }\r\n        // Generate viewBox and preserveAspectRatio attributes\r\n        attributes.preserveAspectRatio = getAlignment(align);\r\n        attributes.viewBox = box.left + ' ' + box.top + ' ' + box.width + ' ' + box.height;\r\n        // Generate body\r\n        let body = SVG.replaceIDs(item.body);\r\n        if (props.color !== void 0) {\r\n            body = body.replace(/currentColor/g, props.color);\r\n        }\r\n        if (transformations.length) {\r\n            body = '<g transform=\"' + transformations.join(' ') + '\">' + body + '</g>';\r\n        }\r\n        if (props.box === true || props.box === 'true' || props.box === '1') {\r\n            // Add transparent bounding box\r\n            // tslint:disable-next-line:max-line-length\r\n            body += '<rect x=\"' + box.left + '\" y=\"' + box.top + '\" width=\"' + box.width + '\" height=\"' + box.height + '\" fill=\"rgba(0, 0, 0, 0)\" />';\r\n        }\r\n        return {\r\n            attributes,\r\n            body,\r\n            style\r\n        };\r\n    }\r\n    /**\r\n     * Generate SVG\r\n     */\r\n    getSVG(attributes) {\r\n        const data = this.getAttributes(attributes);\r\n        let svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\r\n        // Add SVG attributes\r\n        Object.keys(data.attributes).forEach(attr => {\r\n            svg += ' ' + attr + '=\"' + data.attributes[attr] + '\"';\r\n        });\r\n        // Add style with 360deg transformation to style to prevent subpixel rendering bug\r\n        svg += ' style=\"-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);';\r\n        Object.keys(data.style).forEach(attr => {\r\n            svg += ' ' + attr + ': ' + data.style[attr] + ';';\r\n        });\r\n        svg += '\">';\r\n        svg += data.body + '</svg>';\r\n        return svg;\r\n    }\r\n}\n\nclass IconDirective {\r\n    constructor(domSanitizer, iconService) {\r\n        this.domSanitizer = domSanitizer;\r\n        this.iconService = iconService;\r\n        this.width = '1em';\r\n        this.height = '1em';\r\n        this.rotate = 0;\r\n    }\r\n    ngOnInit() { }\r\n    ngOnChanges(changes) {\r\n        if (changes) {\r\n            this.updateIcon();\r\n        }\r\n    }\r\n    updateIcon() {\r\n        const icon = this.getIcon();\r\n        const svg = new SVG(normalize(icon));\r\n        this.iconHTML = this.generateSvgHtml(svg);\r\n    }\r\n    getIcon() {\r\n        const iconInput = this.icon || this.icIcon;\r\n        if (typeof iconInput !== 'object' && typeof iconInput !== 'string') {\r\n            throw new Error('[Iconify]: No icon provided');\r\n        }\r\n        return typeof iconInput === 'object' ? iconInput : this.iconService.get(iconInput);\r\n    }\r\n    generateSvgHtml(svg) {\r\n        return this.domSanitizer.bypassSecurityTrustHtml(svg.getSVG({\r\n            width: this.size || this.width,\r\n            height: this.size || this.height,\r\n            color: this.color,\r\n            inline: this.inline,\r\n            box: this.box,\r\n            align: this.align,\r\n            hFlip: this.hFlip,\r\n            vFlip: this.vFlip,\r\n            flip: this.flip,\r\n            rotate: this.rotate\r\n        }));\r\n    }\r\n}\nIconDirective.ɵfac = function IconDirective_Factory(t) { return new (t || IconDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(IconService)); };\nIconDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: IconDirective, selectors: [[\"ic-icon\"], [\"\", \"icIcon\", \"\"]], hostVars: 3, hostBindings: function IconDirective_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"innerHTML\", ctx.iconHTML, ɵngcc0.ɵɵsanitizeHtml);\n        ɵngcc0.ɵɵclassProp(\"ic-inline\", ctx.inline);\n    } }, inputs: { width: \"width\", height: \"height\", rotate: \"rotate\", icIcon: \"icIcon\", icon: \"icon\", color: \"color\", inline: \"inline\", box: \"box\", size: \"size\", align: \"align\", hFlip: \"hFlip\", vFlip: \"vFlip\", flip: \"flip\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\r\nIconDirective.ctorParameters = () => [\r\n    { type: DomSanitizer },\r\n    { type: IconService }\r\n];\r\nIconDirective.propDecorators = {\r\n    icIcon: [{ type: Input }],\r\n    icon: [{ type: Input }],\r\n    color: [{ type: Input }],\r\n    inline: [{ type: Input }, { type: HostBinding, args: ['class.ic-inline',] }],\r\n    box: [{ type: Input }],\r\n    size: [{ type: Input }],\r\n    width: [{ type: Input }],\r\n    height: [{ type: Input }],\r\n    align: [{ type: Input }],\r\n    hFlip: [{ type: Input }],\r\n    vFlip: [{ type: Input }],\r\n    flip: [{ type: Input }],\r\n    rotate: [{ type: Input }],\r\n    iconHTML: [{ type: HostBinding, args: ['innerHTML',] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconDirective, [{\n        type: Directive,\n        args: [{\n                selector: 'ic-icon,[icIcon]'\n            }]\n    }], function () { return [{ type: ɵngcc1.DomSanitizer }, { type: IconService }]; }, { width: [{\n            type: Input\n        }], height: [{\n            type: Input\n        }], rotate: [{\n            type: Input\n        }], iconHTML: [{\n            type: HostBinding,\n            args: ['innerHTML']\n        }], icIcon: [{\n            type: Input\n        }], icon: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], inline: [{\n            type: Input\n        }, {\n            type: HostBinding,\n            args: ['class.ic-inline']\n        }], box: [{\n            type: Input\n        }], size: [{\n            type: Input\n        }], align: [{\n            type: Input\n        }], hFlip: [{\n            type: Input\n        }], vFlip: [{\n            type: Input\n        }], flip: [{\n            type: Input\n        }] }); })();\n\nclass IconModule {\r\n}\nIconModule.ɵfac = function IconModule_Factory(t) { return new (t || IconModule)(); };\nIconModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: IconModule });\nIconModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [IconDirective],\n                imports: [],\n                exports: [IconDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IconModule, { declarations: [IconDirective], exports: [IconDirective] }); })();\n\n/*\r\n * Public API Surface of iconify\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { IconDirective, IconModule, IconService };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}