{"ast":null,"code":"import { __decorate, __param, __metadata } from 'tslib';\nimport { InjectionToken, Inject, PLATFORM_ID, Optional, NgZone, ɵɵdefineInjectable, ɵɵinject, Injectable, Input, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { Subject, of, timer, combineLatest, Observable } from 'rxjs';\nimport { take, map, tap, startWith, switchMap, shareReplay } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction LoadingBarComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r2.diameter)(\"height\", ctx_r2.diameter);\n  }\n}\n\nfunction LoadingBarComponent_ng_container_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 5);\n  }\n\n  if (rf & 2) {\n    const progress_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"background\", ctx_r3.color)(\"height\", ctx_r3.height)(\"width\", progress_r1 + \"%\");\n  }\n}\n\nfunction LoadingBarComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, LoadingBarComponent_ng_container_0_div_1_Template, 2, 4, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(2, LoadingBarComponent_ng_container_0_div_2_Template, 1, 6, \"div\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.includeSpinner);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.includeBar);\n  }\n}\n\nclass LoadingBarState {\n  constructor(config = {}) {\n    this.config = config;\n    this.state = {\n      action: null,\n      value: 0,\n      initialValue: 0\n    };\n    this.requests = null;\n    this.disabled = false;\n    this.stream$ = new Subject();\n    this._value$ = null;\n\n    this.timer$ = s => {\n      let state$ = of(s);\n\n      switch (s.action) {\n        case 'start':\n        case 'increment':\n        case 'set':\n          {\n            if (s.action === 'start' && this.config.latencyThreshold === 0 && s.value === 0) {\n              s.value = s.initialValue;\n            }\n\n            if (this.requests > 0) {\n              state$ = timer(this.config.latencyThreshold, 250).pipe(map(t => Object.assign(Object.assign({}, s), {\n                value: t === 0 ? this.state.value || s.initialValue : this._increment()\n              })));\n            }\n\n            break;\n          }\n\n        case 'complete':\n        case 'stop':\n          {\n            // Attempt to aggregate any start/complete calls within 500ms:\n            state$ = s.value === 0 ? of(Object.assign({}, s)) : timer(0, 500).pipe(take(2), map(t => ({\n              value: t === 0 ? 100 : 0\n            })));\n            break;\n          }\n      }\n\n      return state$.pipe(map(next => Object.assign(Object.assign({}, next), {\n        action: 'set'\n      })), tap(next => this.next(next, false)));\n    };\n\n    this.config = Object.assign({\n      latencyThreshold: 0\n    }, config);\n  }\n\n  get value$() {\n    if (this._value$) {\n      return this._value$;\n    }\n\n    return this._value$ = this.stream$.asObservable().pipe(startWith(this.state), switchMap(s => this.timer$(s)), shareReplay(), map(s => s.value));\n  }\n\n  start(initialValue = 2) {\n    if (this.disabled) {\n      return;\n    }\n\n    this.next({\n      action: 'start',\n      initialValue\n    });\n  }\n\n  stop() {\n    this.next({\n      action: 'stop'\n    });\n  }\n\n  complete() {\n    this.next({\n      action: 'complete'\n    });\n  }\n\n  disable() {\n    this.disabled = true;\n  }\n\n  set(value) {\n    this.next({\n      action: 'set',\n      value\n    });\n  }\n\n  increment(value = 0) {\n    this.next({\n      action: 'increment',\n      value\n    });\n  }\n\n  next(state, emitEvent = true) {\n    switch (state.action) {\n      case 'start':\n        this.requests = (this.requests || 0) + 1;\n        break;\n\n      case 'complete':\n        this.requests = (this.requests || 1) - 1;\n\n        if (this.requests > 0) {\n          return;\n        }\n\n        break;\n\n      case 'stop':\n        this.requests = 0;\n        break;\n\n      case 'increment':\n        state.value = this._increment(state.value);\n        break;\n    }\n\n    this.state = Object.assign(Object.assign(Object.assign({}, this.state), {\n      action: null\n    }), state);\n\n    if (emitEvent) {\n      this.stream$.next(this.state);\n    }\n  }\n\n  _increment(rnd = 0) {\n    const stat = this.state.value;\n\n    if (stat >= 99) {\n      rnd = 0;\n    }\n\n    if (rnd === 0) {\n      if (stat >= 0 && stat < 25) {\n        // Start out between 3 - 6% increments\n        rnd = Math.random() * (5 - 3 + 1) + 3;\n      } else if (stat >= 25 && stat < 65) {\n        // increment between 0 - 3%\n        rnd = Math.random() * 3;\n      } else if (stat >= 65 && stat < 90) {\n        // increment between 0 - 2%\n        rnd = Math.random() * 2;\n      } else if (stat >= 90 && stat < 99) {\n        // finally, increment it .5 %\n        rnd = 0.5;\n      } else {\n        // after 99%, don't increment:\n        rnd = 0;\n      }\n    }\n\n    return rnd + stat;\n  }\n\n}\n\nconst LOADING_BAR_CONFIG = new InjectionToken('LOADING_BAR_CONFIG');\nlet LoadingBarService = class LoadingBarService {\n  constructor(platformId, config = {}, zone) {\n    this.platformId = platformId;\n    this.config = config;\n    this.zone = zone;\n    this.refs = {};\n    this.streams$ = new Subject();\n    this.value$ = this.streams$.asObservable().pipe(startWith(null), switchMap(() => combineLatest(...Object.keys(this.refs).map(s => this.refs[s].value$))), runInZone(this.zone), map(v => Math.max(0, ...v)));\n  }\n  /** @deprecated use `value$` instead. */\n\n\n  get progress$() {\n    return this.value$;\n  }\n  /** @deprecated use `useRef` instead. */\n\n\n  start(initialValue = 2) {\n    this.useRef().start(initialValue);\n  }\n  /** @deprecated use `useRef` instead. */\n\n\n  set(value) {\n    this.useRef().set(value);\n  }\n  /** @deprecated use `useRef` instead. */\n\n\n  increment(value) {\n    this.useRef().increment(value);\n  }\n  /** @deprecated use `useRef` instead. */\n\n\n  complete() {\n    this.useRef().complete();\n  }\n  /** @deprecated use `useRef` instead. */\n\n\n  stop() {\n    this.useRef().stop();\n  }\n\n  useRef(id = 'default') {\n    if (!this.refs[id]) {\n      this.refs[id] = new LoadingBarState(this.config);\n      this.streams$.next();\n\n      if (!isPlatformBrowser(this.platformId)) {\n        this.refs[id].disable();\n      }\n    }\n\n    return this.refs[id];\n  }\n\n};\n\nLoadingBarService.ɵfac = function LoadingBarService_Factory(t) {\n  return new (t || LoadingBarService)(ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(LOADING_BAR_CONFIG, 8), ɵngcc0.ɵɵinject(ɵngcc0.NgZone, 8));\n};\n\nLoadingBarService.ctorParameters = () => [{\n  type: Object,\n  decorators: [{\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [LOADING_BAR_CONFIG]\n  }]\n}, {\n  type: NgZone,\n  decorators: [{\n    type: Optional\n  }]\n}];\n\nLoadingBarService.ɵprov = ɵɵdefineInjectable({\n  factory: function LoadingBarService_Factory() {\n    return new LoadingBarService(ɵɵinject(PLATFORM_ID), ɵɵinject(LOADING_BAR_CONFIG, 8), ɵɵinject(NgZone, 8));\n  },\n  token: LoadingBarService,\n  providedIn: \"root\"\n});\nLoadingBarService = __decorate([__param(0, Inject(PLATFORM_ID)), __param(1, Optional()), __param(1, Inject(LOADING_BAR_CONFIG)), __param(2, Optional()), __metadata(\"design:paramtypes\", [Object, Object, NgZone])], LoadingBarService); // https://stackoverflow.com/a/57452361/1406096\n\nfunction runInZone(zone) {\n  if (!zone) {\n    return source => source;\n  }\n\n  return source => new Observable(observer => source.subscribe(value => zone.run(() => observer.next(value)), e => zone.run(() => observer.error(e)), () => zone.run(() => observer.complete())));\n}\n\nlet LoadingBarComponent = class LoadingBarComponent {\n  constructor(loader) {\n    this.loader = loader;\n    this.includeSpinner = true;\n    this.includeBar = true;\n    this.fixed = true;\n    this.color = '#29d';\n  }\n\n  get value$() {\n    return this.ref ? this.loader.useRef(this.ref).value$ : this.loader.value$;\n  }\n\n};\n\nLoadingBarComponent.ɵfac = function LoadingBarComponent_Factory(t) {\n  return new (t || LoadingBarComponent)(ɵngcc0.ɵɵdirectiveInject(LoadingBarService));\n};\n\nLoadingBarComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: LoadingBarComponent,\n  selectors: [[\"ngx-loading-bar\"]],\n  hostVars: 3,\n  hostBindings: function LoadingBarComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"fixed\", ctx.fixed);\n      ɵngcc0.ɵɵstyleProp(\"color\", ctx.color);\n    }\n  },\n  inputs: {\n    includeSpinner: \"includeSpinner\",\n    includeBar: \"includeBar\",\n    fixed: \"fixed\",\n    color: \"color\",\n    value: \"value\",\n    ref: \"ref\",\n    height: \"height\",\n    diameter: \"diameter\"\n  },\n  decls: 2,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [\"class\", \"ngx-spinner\", 4, \"ngIf\"], [\"class\", \"ngx-bar\", 3, \"background\", \"height\", \"width\", 4, \"ngIf\"], [1, \"ngx-spinner\"], [1, \"ngx-spinner-icon\"], [1, \"ngx-bar\"]],\n  template: function LoadingBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, LoadingBarComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\n      ɵngcc0.ɵɵpipe(1, \"async\");\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.value != null ? ctx.value : ɵngcc0.ɵɵpipeBind1(1, 1, ctx.value$));\n    }\n  },\n  dependencies: [ɵngcc1.NgIf, ɵngcc1.AsyncPipe],\n  styles: [\"[_nghost-%COMP%]{position:relative;display:block;pointer-events:none}[_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{transition:350ms linear;display:block;position:absolute;top:5px;left:0}[_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]   .ngx-spinner-icon[_ngcontent-%COMP%]{width:14px;height:14px;border:2px solid transparent;border-top-color:inherit;border-left-color:inherit;border-radius:50%;-webkit-animation:.4s linear infinite loading-bar-spinner;animation:.4s linear infinite loading-bar-spinner}[_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{transition:width 350ms;position:absolute;top:0;left:0;width:100%;height:2px;border-bottom-right-radius:1px;border-top-right-radius:1px}[dir=rtl]   [_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{right:0;left:unset}[fixed=true][_nghost-%COMP%]{z-index:10002}[fixed=true][_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{position:fixed}[fixed=true][_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{position:fixed;top:10px;left:10px}[dir=rtl]   [fixed=true][_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{right:10px;left:unset}@-webkit-keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}\"],\n  changeDetection: 0\n});\n\nLoadingBarComponent.ctorParameters = () => [{\n  type: LoadingBarService\n}];\n\n__decorate([Input(), __metadata(\"design:type\", Object)], LoadingBarComponent.prototype, \"includeSpinner\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], LoadingBarComponent.prototype, \"includeBar\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], LoadingBarComponent.prototype, \"fixed\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], LoadingBarComponent.prototype, \"color\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], LoadingBarComponent.prototype, \"value\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], LoadingBarComponent.prototype, \"ref\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], LoadingBarComponent.prototype, \"height\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], LoadingBarComponent.prototype, \"diameter\", void 0);\n\nLoadingBarComponent = __decorate([__metadata(\"design:paramtypes\", [LoadingBarService])], LoadingBarComponent);\nlet LoadingBarModule = class LoadingBarModule {};\n\nLoadingBarModule.ɵfac = function LoadingBarModule_Factory(t) {\n  return new (t || LoadingBarModule)();\n};\n\nLoadingBarModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: LoadingBarModule\n});\nLoadingBarModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [LOADING_BAR_CONFIG]\n      }]\n    }, {\n      type: ɵngcc0.NgZone,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-loading-bar',\n      template: `\n    <ng-container *ngIf=\"value != null ? value : (value$ | async) as progress\">\n      <div *ngIf=\"includeSpinner\" class=\"ngx-spinner\">\n        <div [style.width]=\"diameter\" [style.height]=\"diameter\" class=\"ngx-spinner-icon\"></div>\n      </div>\n      <div\n        *ngIf=\"includeBar\"\n        class=\"ngx-bar\"\n        [style.background]=\"color\"\n        [style.height]=\"height\"\n        [style.width]=\"progress + '%'\"\n      ></div>\n    </ng-container>\n  `,\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.Emulated,\n      host: {\n        '[attr.fixed]': 'fixed',\n        '[style.color]': 'color'\n      },\n      styles: [\":host{position:relative;display:block;pointer-events:none}:host .ngx-spinner{transition:350ms linear;display:block;position:absolute;top:5px;left:0}:host .ngx-spinner .ngx-spinner-icon{width:14px;height:14px;border:2px solid transparent;border-top-color:inherit;border-left-color:inherit;border-radius:50%;-webkit-animation:.4s linear infinite loading-bar-spinner;animation:.4s linear infinite loading-bar-spinner}:host .ngx-bar{transition:width 350ms;position:absolute;top:0;left:0;width:100%;height:2px;border-bottom-right-radius:1px;border-top-right-radius:1px}[dir=rtl] :host .ngx-bar{right:0;left:unset}:host[fixed=true]{z-index:10002}:host[fixed=true] .ngx-bar{position:fixed}:host[fixed=true] .ngx-spinner{position:fixed;top:10px;left:10px}[dir=rtl] :host[fixed=true] .ngx-spinner{right:10px;left:unset}@-webkit-keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}\"]\n    }]\n  }], function () {\n    return [{\n      type: LoadingBarService\n    }];\n  }, {\n    includeSpinner: [{\n      type: Input\n    }],\n    includeBar: [{\n      type: Input\n    }],\n    fixed: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    ref: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    diameter: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [LoadingBarComponent],\n      exports: [LoadingBarComponent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingBarModule, {\n    declarations: function () {\n      return [LoadingBarComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [LoadingBarComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { LOADING_BAR_CONFIG, LoadingBarComponent, LoadingBarModule, LoadingBarService };","map":{"version":3,"names":["__decorate","__param","__metadata","InjectionToken","Inject","PLATFORM_ID","Optional","NgZone","ɵɵdefineInjectable","ɵɵinject","Injectable","Input","Component","ChangeDetectionStrategy","ViewEncapsulation","NgModule","isPlatformBrowser","CommonModule","Subject","of","timer","combineLatest","Observable","take","map","tap","startWith","switchMap","shareReplay","ɵngcc0","ɵngcc1","LoadingBarComponent_ng_container_0_div_1_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ctx_r2","ɵɵnextContext","ɵɵadvance","ɵɵstyleProp","diameter","LoadingBarComponent_ng_container_0_div_2_Template","progress_r1","ngIf","ctx_r3","color","height","LoadingBarComponent_ng_container_0_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","ctx_r0","ɵɵproperty","includeSpinner","includeBar","LoadingBarState","constructor","config","state","action","value","initialValue","requests","disabled","stream$","_value$","timer$","s","state$","latencyThreshold","pipe","t","Object","assign","_increment","next","value$","asObservable","start","stop","complete","disable","set","increment","emitEvent","rnd","stat","Math","random","LOADING_BAR_CONFIG","LoadingBarService","platformId","zone","refs","streams$","keys","runInZone","v","max","progress$","useRef","id","ɵfac","LoadingBarService_Factory","ctorParameters","type","decorators","args","undefined","ɵprov","factory","token","providedIn","source","observer","subscribe","run","e","error","LoadingBarComponent","loader","fixed","ref","LoadingBarComponent_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","hostVars","hostBindings","LoadingBarComponent_HostBindings","ɵɵattribute","inputs","decls","vars","consts","template","LoadingBarComponent_Template","ɵɵpipe","ɵɵpipeBind1","dependencies","NgIf","AsyncPipe","styles","changeDetection","prototype","Number","String","LoadingBarModule","LoadingBarModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngDevMode","ɵsetClassMetadata","selector","preserveWhitespaces","OnPush","encapsulation","Emulated","host","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["C:/Projects/Sistema POS 2022/SirPosFront14/node_modules/@ngx-loading-bar/core/__ivy_ngcc__/fesm2015/ngx-loading-bar-core.js"],"sourcesContent":["import { __decorate, __param, __metadata } from 'tslib';\nimport { InjectionToken, Inject, PLATFORM_ID, Optional, NgZone, ɵɵdefineInjectable, ɵɵinject, Injectable, Input, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { Subject, of, timer, combineLatest, Observable } from 'rxjs';\nimport { take, map, tap, startWith, switchMap, shareReplay } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction LoadingBarComponent_ng_container_0_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r2.diameter)(\"height\", ctx_r2.diameter);\n} }\nfunction LoadingBarComponent_ng_container_0_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 5);\n} if (rf & 2) {\n    const progress_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"background\", ctx_r3.color)(\"height\", ctx_r3.height)(\"width\", progress_r1 + \"%\");\n} }\nfunction LoadingBarComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, LoadingBarComponent_ng_container_0_div_1_Template, 2, 4, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(2, LoadingBarComponent_ng_container_0_div_2_Template, 1, 6, \"div\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.includeSpinner);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.includeBar);\n} }\nclass LoadingBarState {\n    constructor(config = {}) {\n        this.config = config;\n        this.state = {\n            action: null,\n            value: 0,\n            initialValue: 0,\n        };\n        this.requests = null;\n        this.disabled = false;\n        this.stream$ = new Subject();\n        this._value$ = null;\n        this.timer$ = (s) => {\n            let state$ = of(s);\n            switch (s.action) {\n                case 'start':\n                case 'increment':\n                case 'set': {\n                    if (s.action === 'start' && this.config.latencyThreshold === 0 && s.value === 0) {\n                        s.value = s.initialValue;\n                    }\n                    if (this.requests > 0) {\n                        state$ = timer(this.config.latencyThreshold, 250).pipe(map((t) => (Object.assign(Object.assign({}, s), { value: t === 0 ? this.state.value || s.initialValue : this._increment() }))));\n                    }\n                    break;\n                }\n                case 'complete':\n                case 'stop': {\n                    // Attempt to aggregate any start/complete calls within 500ms:\n                    state$ =\n                        s.value === 0\n                            ? of(Object.assign({}, s))\n                            : timer(0, 500).pipe(take(2), map((t) => ({ value: t === 0 ? 100 : 0 })));\n                    break;\n                }\n            }\n            return state$.pipe(map((next) => (Object.assign(Object.assign({}, next), { action: 'set' }))), tap((next) => this.next(next, false)));\n        };\n        this.config = Object.assign({ latencyThreshold: 0 }, config);\n    }\n    get value$() {\n        if (this._value$) {\n            return this._value$;\n        }\n        return (this._value$ = this.stream$.asObservable().pipe(startWith(this.state), switchMap((s) => this.timer$(s)), shareReplay(), map((s) => s.value)));\n    }\n    start(initialValue = 2) {\n        if (this.disabled) {\n            return;\n        }\n        this.next({ action: 'start', initialValue });\n    }\n    stop() {\n        this.next({ action: 'stop' });\n    }\n    complete() {\n        this.next({ action: 'complete' });\n    }\n    disable() {\n        this.disabled = true;\n    }\n    set(value) {\n        this.next({ action: 'set', value });\n    }\n    increment(value = 0) {\n        this.next({ action: 'increment', value });\n    }\n    next(state, emitEvent = true) {\n        switch (state.action) {\n            case 'start':\n                this.requests = (this.requests || 0) + 1;\n                break;\n            case 'complete':\n                this.requests = (this.requests || 1) - 1;\n                if (this.requests > 0) {\n                    return;\n                }\n                break;\n            case 'stop':\n                this.requests = 0;\n                break;\n            case 'increment':\n                state.value = this._increment(state.value);\n                break;\n        }\n        this.state = Object.assign(Object.assign(Object.assign({}, this.state), { action: null }), state);\n        if (emitEvent) {\n            this.stream$.next(this.state);\n        }\n    }\n    _increment(rnd = 0) {\n        const stat = this.state.value;\n        if (stat >= 99) {\n            rnd = 0;\n        }\n        if (rnd === 0) {\n            if (stat >= 0 && stat < 25) {\n                // Start out between 3 - 6% increments\n                rnd = Math.random() * (5 - 3 + 1) + 3;\n            }\n            else if (stat >= 25 && stat < 65) {\n                // increment between 0 - 3%\n                rnd = Math.random() * 3;\n            }\n            else if (stat >= 65 && stat < 90) {\n                // increment between 0 - 2%\n                rnd = Math.random() * 2;\n            }\n            else if (stat >= 90 && stat < 99) {\n                // finally, increment it .5 %\n                rnd = 0.5;\n            }\n            else {\n                // after 99%, don't increment:\n                rnd = 0;\n            }\n        }\n        return rnd + stat;\n    }\n}\n\nconst LOADING_BAR_CONFIG = new InjectionToken('LOADING_BAR_CONFIG');\n\nlet LoadingBarService = class LoadingBarService {\n    constructor(platformId, config = {}, zone) {\n        this.platformId = platformId;\n        this.config = config;\n        this.zone = zone;\n        this.refs = {};\n        this.streams$ = new Subject();\n        this.value$ = this.streams$.asObservable().pipe(startWith(null), switchMap(() => combineLatest(...Object.keys(this.refs).map((s) => this.refs[s].value$))), runInZone(this.zone), map((v) => Math.max(0, ...v)));\n    }\n    /** @deprecated use `value$` instead. */\n    get progress$() {\n        return this.value$;\n    }\n    /** @deprecated use `useRef` instead. */\n    start(initialValue = 2) {\n        this.useRef().start(initialValue);\n    }\n    /** @deprecated use `useRef` instead. */\n    set(value) {\n        this.useRef().set(value);\n    }\n    /** @deprecated use `useRef` instead. */\n    increment(value) {\n        this.useRef().increment(value);\n    }\n    /** @deprecated use `useRef` instead. */\n    complete() {\n        this.useRef().complete();\n    }\n    /** @deprecated use `useRef` instead. */\n    stop() {\n        this.useRef().stop();\n    }\n    useRef(id = 'default') {\n        if (!this.refs[id]) {\n            this.refs[id] = new LoadingBarState(this.config);\n            this.streams$.next();\n            if (!isPlatformBrowser(this.platformId)) {\n                this.refs[id].disable();\n            }\n        }\n        return this.refs[id];\n    }\n};\nLoadingBarService.ɵfac = function LoadingBarService_Factory(t) { return new (t || LoadingBarService)(ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(LOADING_BAR_CONFIG, 8), ɵngcc0.ɵɵinject(ɵngcc0.NgZone, 8)); };\nLoadingBarService.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LOADING_BAR_CONFIG,] }] },\n    { type: NgZone, decorators: [{ type: Optional }] }\n];\nLoadingBarService.ɵprov = ɵɵdefineInjectable({ factory: function LoadingBarService_Factory() { return new LoadingBarService(ɵɵinject(PLATFORM_ID), ɵɵinject(LOADING_BAR_CONFIG, 8), ɵɵinject(NgZone, 8)); }, token: LoadingBarService, providedIn: \"root\" });\nLoadingBarService = __decorate([ __param(0, Inject(PLATFORM_ID)),\n    __param(1, Optional()), __param(1, Inject(LOADING_BAR_CONFIG)),\n    __param(2, Optional()),\n    __metadata(\"design:paramtypes\", [Object, Object, NgZone])\n], LoadingBarService);\n// https://stackoverflow.com/a/57452361/1406096\nfunction runInZone(zone) {\n    if (!zone) {\n        return (source) => source;\n    }\n    return (source) => new Observable((observer) => source.subscribe((value) => zone.run(() => observer.next(value)), (e) => zone.run(() => observer.error(e)), () => zone.run(() => observer.complete())));\n}\n\nlet LoadingBarComponent = class LoadingBarComponent {\n    constructor(loader) {\n        this.loader = loader;\n        this.includeSpinner = true;\n        this.includeBar = true;\n        this.fixed = true;\n        this.color = '#29d';\n    }\n    get value$() {\n        return this.ref ? this.loader.useRef(this.ref).value$ : this.loader.value$;\n    }\n};\nLoadingBarComponent.ɵfac = function LoadingBarComponent_Factory(t) { return new (t || LoadingBarComponent)(ɵngcc0.ɵɵdirectiveInject(LoadingBarService)); };\nLoadingBarComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: LoadingBarComponent, selectors: [[\"ngx-loading-bar\"]], hostVars: 3, hostBindings: function LoadingBarComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"fixed\", ctx.fixed);\n        ɵngcc0.ɵɵstyleProp(\"color\", ctx.color);\n    } }, inputs: { includeSpinner: \"includeSpinner\", includeBar: \"includeBar\", fixed: \"fixed\", color: \"color\", value: \"value\", ref: \"ref\", height: \"height\", diameter: \"diameter\" }, decls: 2, vars: 3, consts: [[4, \"ngIf\"], [\"class\", \"ngx-spinner\", 4, \"ngIf\"], [\"class\", \"ngx-bar\", 3, \"background\", \"height\", \"width\", 4, \"ngIf\"], [1, \"ngx-spinner\"], [1, \"ngx-spinner-icon\"], [1, \"ngx-bar\"]], template: function LoadingBarComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, LoadingBarComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.value != null ? ctx.value : ɵngcc0.ɵɵpipeBind1(1, 1, ctx.value$));\n    } }, dependencies: [ɵngcc1.NgIf, ɵngcc1.AsyncPipe], styles: [\"[_nghost-%COMP%]{position:relative;display:block;pointer-events:none}[_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{transition:350ms linear;display:block;position:absolute;top:5px;left:0}[_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]   .ngx-spinner-icon[_ngcontent-%COMP%]{width:14px;height:14px;border:2px solid transparent;border-top-color:inherit;border-left-color:inherit;border-radius:50%;-webkit-animation:.4s linear infinite loading-bar-spinner;animation:.4s linear infinite loading-bar-spinner}[_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{transition:width 350ms;position:absolute;top:0;left:0;width:100%;height:2px;border-bottom-right-radius:1px;border-top-right-radius:1px}[dir=rtl]   [_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{right:0;left:unset}[fixed=true][_nghost-%COMP%]{z-index:10002}[fixed=true][_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{position:fixed}[fixed=true][_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{position:fixed;top:10px;left:10px}[dir=rtl]   [fixed=true][_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{right:10px;left:unset}@-webkit-keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}\"], changeDetection: 0 });\nLoadingBarComponent.ctorParameters = () => [\n    { type: LoadingBarService }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], LoadingBarComponent.prototype, \"includeSpinner\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], LoadingBarComponent.prototype, \"includeBar\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], LoadingBarComponent.prototype, \"fixed\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], LoadingBarComponent.prototype, \"color\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], LoadingBarComponent.prototype, \"value\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], LoadingBarComponent.prototype, \"ref\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], LoadingBarComponent.prototype, \"height\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], LoadingBarComponent.prototype, \"diameter\", void 0);\nLoadingBarComponent = __decorate([ __metadata(\"design:paramtypes\", [LoadingBarService])\n], LoadingBarComponent);\n\nlet LoadingBarModule = class LoadingBarModule {\n};\nLoadingBarModule.ɵfac = function LoadingBarModule_Factory(t) { return new (t || LoadingBarModule)(); };\nLoadingBarModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: LoadingBarModule });\nLoadingBarModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarService, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LOADING_BAR_CONFIG]\n            }] }, { type: ɵngcc0.NgZone, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarComponent, [{\n        type: Component,\n        args: [{ selector: 'ngx-loading-bar', template: `\n    <ng-container *ngIf=\"value != null ? value : (value$ | async) as progress\">\n      <div *ngIf=\"includeSpinner\" class=\"ngx-spinner\">\n        <div [style.width]=\"diameter\" [style.height]=\"diameter\" class=\"ngx-spinner-icon\"></div>\n      </div>\n      <div\n        *ngIf=\"includeBar\"\n        class=\"ngx-bar\"\n        [style.background]=\"color\"\n        [style.height]=\"height\"\n        [style.width]=\"progress + '%'\"\n      ></div>\n    </ng-container>\n  `, preserveWhitespaces: false, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.Emulated, host: {\n                    '[attr.fixed]': 'fixed',\n                    '[style.color]': 'color'\n                }, styles: [\":host{position:relative;display:block;pointer-events:none}:host .ngx-spinner{transition:350ms linear;display:block;position:absolute;top:5px;left:0}:host .ngx-spinner .ngx-spinner-icon{width:14px;height:14px;border:2px solid transparent;border-top-color:inherit;border-left-color:inherit;border-radius:50%;-webkit-animation:.4s linear infinite loading-bar-spinner;animation:.4s linear infinite loading-bar-spinner}:host .ngx-bar{transition:width 350ms;position:absolute;top:0;left:0;width:100%;height:2px;border-bottom-right-radius:1px;border-top-right-radius:1px}[dir=rtl] :host .ngx-bar{right:0;left:unset}:host[fixed=true]{z-index:10002}:host[fixed=true] .ngx-bar{position:fixed}:host[fixed=true] .ngx-spinner{position:fixed;top:10px;left:10px}[dir=rtl] :host[fixed=true] .ngx-spinner{right:10px;left:unset}@-webkit-keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}\"] }]\n    }], function () { return [{ type: LoadingBarService }]; }, { includeSpinner: [{\n            type: Input\n        }], includeBar: [{\n            type: Input\n        }], fixed: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], ref: [{\n            type: Input\n        }], height: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [LoadingBarComponent],\n                exports: [LoadingBarComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingBarModule, { declarations: function () { return [LoadingBarComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [LoadingBarComponent]; } }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LOADING_BAR_CONFIG, LoadingBarComponent, LoadingBarModule, LoadingBarService };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}